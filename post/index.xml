<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on jubalh&#39;s blog</title>
    <link>http://jubalh.github.io/blog/post/</link>
    <description>Recent content in Posts on jubalh&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 07 Aug 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://jubalh.github.io/blog/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>irssi</title>
      <link>http://jubalh.github.io/blog/post/2015-08-07-irssi/</link>
      <pubDate>Fri, 07 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>http://jubalh.github.io/blog/post/2015-08-07-irssi/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;http://irssi.org/&#34;&gt;irssi&lt;/a&gt; is probably the most popular IRC client out there. An alternative for the commandline is weechat but I like irssi better. Of course many people also use GUI clients like &lt;a href=&#34;https://hexchat.github.io/&#34;&gt;hexchat&lt;/a&gt;, &lt;a href=&#34;https://konversation.kde.org/&#34;&gt;Konversation&lt;/a&gt;, &lt;a href=&#34;https://wiki.gnome.org/Apps/Polari&#34;&gt;Polari&lt;/a&gt; or &lt;a href=&#34;https://www.codeux.com/textual/&#34;&gt;Textual&lt;/a&gt; for OSX. Some people prefer multi protocol messengers like Kopete or pidgin, with finch as the console aquivalent. For IRC my favourite is still irssi.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://jubalh.github.io/blog/images/irssiscreenshot.png&#34;&gt;
&lt;img src=&#34;http://jubalh.github.io/blog/images/irssiscreenshot.png&#34; alt=&#34;my irssi setup&#34; style=&#34;width: 734px;&#34;/&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The best way to get an overview of irssi is to read the &lt;a href=&#34;http://irssi.org/beginner/#c3&#34;&gt;Startup Howto&lt;/a&gt; followed by the complete &lt;a href=&#34;http://www.irssi.org/documentation/manual&#34;&gt;manual&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&#34;configuration:eccb26d0f8827c98a1bb72a9212d7155&#34;&gt;Configuration&lt;/h1&gt;

&lt;p&gt;Basically there are two ways to configure irssi. By either doing in in irssi directly, for which you have to learn the commands mentioned briefly in the Startup Howto and thouroughly in the manual, or by editing the configuration file &lt;code&gt;~/.irssi/config&lt;/code&gt;.
For some reason I prefer the latter. When I started out with irssi there was no overview available, but when I looked around when I started writingt his post I found this nice &lt;a href=&#34;http://pbraun.nethence.com/unix/chat/irssi.html&#34;&gt;overview&lt;/a&gt;. Which mentions the commands you have to type in irssi and tells you about what will be written in the config file for this command.&lt;/p&gt;

&lt;p&gt;Actually way back in 2012 I wrote a script called &lt;a href=&#34;https://github.com/jubalh/inircosc&#34;&gt;inircosc&lt;/a&gt; which is an abbreviation for &lt;strong&gt;in&lt;/strong&gt;teractive &lt;strong&gt;ir&lt;/strong&gt;ssi &lt;strong&gt;co&lt;/strong&gt;nfiguration &lt;strong&gt;sc&lt;/strong&gt;ript.&lt;/p&gt;

&lt;h1 id=&#34;inircosc:eccb26d0f8827c98a1bb72a9212d7155&#34;&gt;inircosc&lt;/h1&gt;

&lt;p&gt;As expected you have to clone the git repo and then run the script. This is described in the &lt;a href=&#34;https://github.com/jubalh/inircosc/blob/master/README.md&#34;&gt;readme&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$: git clone https://github.com/jubalh/inircosc
$: cd inircosc
$: bash inircosc.sh

--------------------
Server settings
Enter new server (e.g. irc.freenode.net): irc.freenode.net
Enter chatnet for this server:(e.g. freenode) freenode
Port (default: 6667): 6667
Autoconnect to this server? (default: yes): yes
Use SSL? (default: no): no
Enter nick: peterpan
Password (default: none):
Nickserv password (default: none): lilly
Enter new server (e.g. irc.freenode.net):

--------------------
Channel settings
Enter new channel (e.g. #mychan): #wonderland
Enter chatnet on which the channel exists (e.g. freenode): freenode
Autojoin this channel (default: yes): yes
Enter new channel (e.g. #mychan):

--------------------
Miscellaneous settings
Enter real name: Peter Pan
Enter username: peterp
Enter default nickname: peterpan
Enable logging (default: no): no
Do you want to add some standard aliases (default no): yes
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As you saw the script will prompt you some things and you just answer time. Truthfully!
You can add mutliple networks/channels, but if you just press &lt;em&gt;enter&lt;/em&gt;, like I did in the example above it will continue with the next question.
If you already have a configuration file the script will move it to &lt;em&gt;config.old&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;For some people this might be the easiest/fastest way to configure irssi. If you find any bugs or have suggestions or improvements, just create an &lt;a href=&#34;https://github.com/jubalh/inircosc/issues&#34;&gt;issue&lt;/a&gt; on GitHub.&lt;/p&gt;

&lt;h1 id=&#34;scripts:eccb26d0f8827c98a1bb72a9212d7155&#34;&gt;Scripts&lt;/h1&gt;

&lt;p&gt;There exist quite a few scripts for irssi which can be found at &lt;a href=&#34;http://scripts.irssi.org/&#34;&gt;scripts.irssi.org&lt;/a&gt;.
Generally you have to put them into &lt;code&gt;~/.irssi/scripts&lt;/code&gt; or &lt;code&gt;~/.irssi/scripts/autorun&lt;/code&gt; and run them with &lt;em&gt;/run scriptname&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;My favourite ones are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;nickcolor: uses different colors for nicks, so it&amp;rsquo;s easier to distinguish between people&lt;/li&gt;
&lt;li&gt;hilightwin: put all hilights/private messages in a seperate window, so it&amp;rsquo;s easier to spot them&lt;/li&gt;
&lt;li&gt;adv_windowlist: a better window list&lt;/li&gt;
&lt;li&gt;trackbar: draws a line below the sentence you last read in a certain channel&lt;/li&gt;
&lt;li&gt;auto_whois: sends the whois command to users which start a private message with you and displays it&lt;/li&gt;
&lt;li&gt;osx_notifier: I want to get notified about things when on OSX&lt;/li&gt;
&lt;li&gt;shortul: when someone posts a link, this will use a urlshortener and print the shortened link below. Makes it easy if you cannot copy/paste&lt;/li&gt;
&lt;li&gt;smartfilter: Only shows joins/quits/parts messages for active users&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the inircosc repository there is another script called &lt;em&gt;get_scripts.sh&lt;/em&gt;, this will download all of the mentioned scripts and put them in irssi&amp;rsquo;s autorun directory so they will enabled when irssi is started.&lt;/p&gt;

&lt;p&gt;So after you set up your, and mine, favourite IRC client using inircosc, run &lt;code&gt;bash ./get_scripts.sh&lt;/code&gt; to have a really nice irssi experience.&lt;/p&gt;

&lt;h2 id=&#34;adv-windowlist-pl:eccb26d0f8827c98a1bb72a9212d7155&#34;&gt;adv_windowlist.pl&lt;/h2&gt;

&lt;p&gt;Read the header of the script to learn more about it.&lt;/p&gt;

&lt;p&gt;If you run irssi inside tmux you can create a new pane and run &lt;code&gt;perl ~/.irssi/scripts/autorun/adv_windowlist.pl&lt;/code&gt; to have the info displayed in a seperate space. You can switch from the sbar to tmux mode by using &lt;em&gt;/toggle awl_viewer&lt;/em&gt;. To get rid of the window statusbar that comes with irssi type &lt;em&gt;/statusbar window visible inactive&lt;/em&gt; or goot for &lt;em&gt;window&lt;/em&gt; in the configuration file and set &lt;code&gt;visible = &amp;quot;active&amp;quot;;&lt;/code&gt; to &lt;em&gt;inactive&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Using &lt;em&gt;/statusbar&lt;/em&gt; you can get information about the statusbar in general and &lt;em&gt;/statusbar window&lt;/em&gt; will give you more information on the specific item. Look at the &lt;em&gt;name&lt;/em&gt; column to see what else exists.&lt;/p&gt;

&lt;p&gt;And if you don&amp;rsquo;t want to see the extra window for the network you can do &lt;em&gt;/format -delete awl_display_header&lt;/em&gt;. Quite important to me to have more space!&lt;/p&gt;

&lt;h2 id=&#34;nicklist:eccb26d0f8827c98a1bb72a9212d7155&#34;&gt;nicklist&lt;/h2&gt;

&lt;p&gt;In another tmux pane run the following to get information how much space you got in it and then start displaying the fifo which the script will create.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;stty size
cat ~/.irssi/nicklistfifo
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;hilightwin-pl:eccb26d0f8827c98a1bb72a9212d7155&#34;&gt;hilightwin.pl&lt;/h2&gt;

&lt;p&gt;So if you see you got a hilight at, let&amp;rsquo;s say 12:34 then just switch into the window of that channel and type &lt;em&gt;/scrollback goto 12:34&lt;/em&gt; to jumpt to that time.
In irssi we now configure the script and let it write to fifo:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/set nicklist_height FIRST_STTY_VALUE
/set nicklist_width SECOND_STTY_VALUE
/nicklist fifo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Unfortunately I don&amp;rsquo;t know a way to remove the &lt;em&gt;hiligh&lt;/em&gt; window from the list of windows, not even with adv_windowlist.pl but we can hide it as much as possible using:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/window number 999
/set activity_hide_targets hilight
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/br&gt;&lt;/p&gt;

&lt;h1 id=&#34;smartfiler-pl:eccb26d0f8827c98a1bb72a9212d7155&#34;&gt;smartfiler.pl&lt;/h1&gt;

&lt;p&gt;If you just want to ignore all joins no matter what you don&amp;rsquo;t need this plugin, rather do:
&lt;code&gt;/ignore -channels #roomA,#roomB * JOINS PARTS QUITS NICKS&lt;/code&gt;.&lt;/p&gt;

&lt;h1 id=&#34;themes:eccb26d0f8827c98a1bb72a9212d7155&#34;&gt;Themes&lt;/h1&gt;

&lt;p&gt;There exist a lot of themes for irssi at their &lt;a href=&#34;http://irssi.org/themes&#34;&gt;site&lt;/a&gt;. &lt;em&gt;get_scripts.sh&lt;/em&gt; will also get you my favourites.
Don&amp;rsquo;t forget that the actual looks of your setup heavily depends on how you configured your terminal!&lt;/p&gt;

&lt;h1 id=&#34;more:eccb26d0f8827c98a1bb72a9212d7155&#34;&gt;More&lt;/h1&gt;

&lt;p&gt;When starting out with irssi I sometimes ended up with empty windows which was quite annoying and weird. Eventually I found out how they came into existence:&lt;/p&gt;

&lt;p&gt;The empty window is created either by saving a window layout and not having the channel that should be in that position saved with the -auto flag. Because the window is a placeholder until you join the channel you earlier implied would go there. Or it could be created by sending a /msg to someone.&lt;/p&gt;

&lt;p&gt;What&amp;rsquo;s also important is to type &lt;em&gt;/save&lt;/em&gt; when you changed your configuration or layout!&lt;/p&gt;

&lt;p&gt;Feel free to fork &lt;strong&gt;inircosc&lt;/strong&gt; and adapt it to your needs!&lt;/p&gt;

&lt;p&gt;There is a lot more to configure and play around with. And quite a few scripts are out there. Some people might enjoy &lt;a href=&#34;https://irssinotifier.appspot.com/&#34;&gt;IrssiNotifier+&lt;/a&gt; which sends notifications not to your screen but to your phone instead!&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://jubalh.github.io/blog/images/irssinotifierplus.png&#34;&gt;
&lt;img src=&#34;http://jubalh.github.io/blog/images/irssinotifierplus.png&#34; alt=&#34;irssinotifier&#34; style=&#34;width: 200px;&#34;/&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://wiki.shellium.org/w/Irssi&#34;&gt;http://wiki.shellium.org/w/Irssi&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The dotfiles</title>
      <link>http://jubalh.github.io/blog/post/2015-08-06-gitserver/</link>
      <pubDate>Thu, 06 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>http://jubalh.github.io/blog/post/2015-08-06-gitserver/</guid>
      <description>

&lt;p&gt;I store most of my configuration files &lt;a href=&#34;https://github.com/jubalh/dotfiles&#34;&gt;publicly&lt;/a&gt; on GitHub.
However there are some programs which contain passwords in their config files, among these are irssi, Pidgin and osc.&lt;/p&gt;

&lt;p&gt;It was very annoying to always configure those programs from the start on each computer.&lt;/p&gt;

&lt;p&gt;So today I took the time and created a small &lt;em&gt;server&lt;/em&gt; out of an old netbook.
I switch it on on days I know I need a service on it and leave it off if I don&amp;rsquo;t.&lt;/p&gt;

&lt;p&gt;It works as a git server so I can store my &lt;em&gt;private-dotfiles&lt;/em&gt; in there. I also configured it to connect to my companies VPN and run irssi on it in a tmux session. This way I can reboot/shutdown my main computer as much as I want or can switch to another computer which I need to do from time to time. I would have used my Raspberry Pi for this, but I turned it into a game station and gave it to someone else.&lt;/p&gt;

&lt;h1 id=&#34;git:e194c838484cb265d5adc8c16402b63b&#34;&gt;Git&lt;/h1&gt;

&lt;p&gt;On the netbook I run Funtoo and git was already installed on it.&lt;/p&gt;

&lt;p&gt;First I created a new user as which we will log in, and added my public SSH keys to the &lt;em&gt;authorized_keys&lt;/em&gt; file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$: ssh root@avalon
$: useradd git
$: su - git
$: mkdir .ssh
$: chmod 700 .ssh
$: vim .ssh/authorized_keys
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The public SSH key can be found in &lt;code&gt;~/.ssh/id_rsa.pub&lt;/code&gt;. So I copied the ones from all of my computers and just pasted them into the file, one after another.
The reason for using SSH keys is that only computers that got registered (which key got added) can access the repos there, so we won&amp;rsquo;t user a password.&lt;/p&gt;

&lt;p&gt;I store all git repos in &lt;code&gt;/home/git/&lt;/code&gt;. There I create a folder with the suffix &lt;em&gt;.git&lt;/em&gt; for each repo:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$: mkdir privatedotfiles.git
$: cd privatedotfiles.git
$: git init --bare

Initialized empty Git repository in /home/git/privaterepos.git/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;From my main machine I now run the following to push my private dotfiles to the server:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$: cd ~/where/my/privatedotfiles/reside
$: git init
$: git add . &amp;amp;&amp;amp; git commit -m &amp;quot;initial&amp;quot;
$: git remote add avalon git@avalon:/home/git/privaterepos.git
$: git push avalon master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And from all the others I just clone to have it on my machine:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$: git clone git@avalon:/home/git/privaterepos.git

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;References: &lt;a href=&#34;https://git-scm.com/book/it/v2/Git-on-the-Server-Setting-Up-the-Server&#34;&gt;git-scm&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Enable ssh on openSUSE</title>
      <link>http://jubalh.github.io/blog/post/2015-07-21-ssh_on_suse/</link>
      <pubDate>Tue, 21 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>http://jubalh.github.io/blog/post/2015-07-21-ssh_on_suse/</guid>
      <description>&lt;p&gt;Okay, going to explain how to install and enable ssh on your openSUSE box here. Some people didn&amp;rsquo;t seem to get it to work altough there is &lt;a href=&#34;http://www.fene-blog.de/linux/ssh-zugriff-opensuse-112-113-installieren-freischalten-aktivieren/&#34;&gt;an older article&lt;/a&gt; describing how to do it with SysVInit. My article will have the same format just with the new commands. On the &lt;a href=&#34;https://en.opensuse.org/SDB:OpenSSH_basics&#34;&gt;openSUSE wiki&lt;/a&gt; they explain it via yast.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Check if package is installed:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;zypper if openssh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Install package if it isn&amp;rsquo;t installed:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;zypper in openssh
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Check if ssh server is running:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;systemctl status sshd
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Start service:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;systemctl start sshd vs rcsshdstart?
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Check if service is launched at startup:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;systemctl is-enabled sshd
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Launch it on system startup:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;systemctl enable sshd
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Check if Firewall blocks port 22 for ssh:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;SuSEfirewall2 status | grep 22
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you don&amp;rsquo;t get any output from that command open the port with:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;SuSEfirewall2 open EXT TCP ssh
SuSEfirewall2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That&amp;rsquo;s it!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Amazing Fritz!Box</title>
      <link>http://jubalh.github.io/blog/post/2015-07-20-fritzbox/</link>
      <pubDate>Mon, 20 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>http://jubalh.github.io/blog/post/2015-07-20-fritzbox/</guid>
      <description>

&lt;p&gt;The Fritz!Box is really a very usable device. And I am quite happy that it is pretty common and many people have it. Here I describe which features I especially like and use.&lt;/p&gt;

&lt;h1 id=&#34;accessing-the-fritz-box:366ab485dd3ee4fd7ece30b75ac01d64&#34;&gt;Accessing the Fritz!Box&lt;/h1&gt;

&lt;p&gt;The easiest way to configure it is probably accessing it via your browser, just navigate to either &lt;em&gt;&lt;a href=&#34;http://192.168.178.1/&#34;&gt;http://192.168.178.1/&lt;/a&gt;&lt;/em&gt; or &lt;em&gt;&lt;a href=&#34;http://fritz.box/&#34;&gt;http://fritz.box/&lt;/a&gt;&lt;/em&gt;. Sometimes I have not set up correctly DNS properly because I have a half-ass configured VPN running on one of my laptops and then I have to use the IP insteda of the domain name.&lt;/p&gt;

&lt;h1 id=&#34;remote-login:366ab485dd3ee4fd7ece30b75ac01d64&#34;&gt;Remote login&lt;/h1&gt;

&lt;p&gt;What&amp;rsquo;s really handy is the feature to log into your box when you are actually not home, for this you either can use DynDNS where you need to register with a provider, some of which cost money. Or you can use AVM&amp;rsquo;s own service called &lt;a href=&#34;https://www.myfritz.net&#34;&gt;MyFRITZ&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Just create a MyFRITZ account, then log into your box when you are home and navigate to:
&lt;em&gt;Internet -&amp;gt; MyFRITZ!&lt;/em&gt; and click on &lt;em&gt;Add MyFRITZ! account&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Now you have to give your email adress and details on the MyFRITZ account.&lt;/p&gt;

&lt;p&gt;From now on your box will send its current IP adress to the MyFRITZ service and thus you can access this box via the domain name you got registered on your MyFRITZ account. You also could register several boxes there, for example if you adminster some for your friends or family.&lt;/p&gt;

&lt;p&gt;After this go into &lt;em&gt;System -&amp;gt; FRITZ!Box-Benutzer&lt;/em&gt; and click on &lt;em&gt;Add new user&lt;/em&gt;. Fill in a name, E-Mail and password and most importantly check the box &lt;em&gt;Zugang auch aus dem Internet erlaubt&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;If you type in the adress you got from the MyFRITZ then you will be forwarded to the FritzBox login and you need to log in via the user details you just set not with you MyFRITZ one! Also this user and password is only stored on your device and not on the external service. The external service is just to create a domain name to access your box.&lt;/p&gt;

&lt;p&gt;To view your domain name you need to have enabled: &lt;em&gt;Internet -&amp;gt; Freigaben -&amp;gt; FRITZ!Box-Dienste -&amp;gt; Internetzugriff auf die FRITZ!Box über HTTPS aktiviert&lt;/em&gt; and then take a lookt at &lt;em&gt;Internetadresse Ihrer FRITZ!Box&lt;/em&gt;.&lt;/p&gt;

&lt;h1 id=&#34;voip-phone:366ab485dd3ee4fd7ece30b75ac01d64&#34;&gt;VOIP Phone&lt;/h1&gt;

&lt;p&gt;Click on &lt;em&gt;Telefonie -&amp;gt; Telefoniegeräte&lt;/em&gt; and then on &lt;em&gt;Neues Gerät einrichten&lt;/em&gt;.
Choose &lt;em&gt;Telefon (mit und ohne Anrufbeantworter)&lt;/em&gt; and then most importantly &lt;em&gt;LAN/WLAN (IP-Telefon)&lt;/em&gt; the rest is just which numbers to use and whats the internal number is going to be.&lt;/p&gt;

&lt;p&gt;Now install &lt;a href=&#34;http://www.ekiga.org/&#34;&gt;Ekiga&lt;/a&gt; click on &lt;em&gt;Edit -&amp;gt; Accounts&lt;/em&gt; and use the following example to configure yours:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Name: My FritzBox
Registrar: fritx.box
User: 1
Authentication user: 1
Password: XXX
Timeout: 3600
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Registrar can also be the IP of your FritzBox if you have not a correct DNS (like me right now). User and authentication user is the your phones internal number, which can be viewed in the settings.&lt;/p&gt;

&lt;p&gt;Now you can make calls from your computer!&lt;/p&gt;

&lt;h1 id=&#34;vpn:366ab485dd3ee4fd7ece30b75ac01d64&#34;&gt;VPN&lt;/h1&gt;

&lt;p&gt;You can even log in on your own VPN now and thus phone from anywhere you currently are and access all the computers in your network at home. Go to &lt;em&gt;System -&amp;gt; FRITZ!Box-Benutzer&lt;/em&gt; then click on the &lt;em&gt;Edit&lt;/em&gt; button to the right for your user. If you have on the following page enabled &lt;em&gt;VPN&lt;/em&gt; you can now click on &lt;em&gt;VPN-Einstellungen anzeigen&lt;/em&gt; to get the details on how to connect into your own VPN.&lt;/p&gt;

&lt;p&gt;AVM also releases nice Videos on YouTube which give good instructions on how to edit those settings and what they are actually about. The relevant ones for this subject are &lt;a href=&#34;https://www.youtube.com/watch?v=oJgY4Zyn5Lk&#34;&gt;Die FRITZ!Box am IP-basierten Anschluss&lt;/a&gt; and &lt;a href=&#34;https://www.youtube.com/watch?v=2MLVZi_kH0c&#34;&gt;VPN mit der FRITZ!Box &lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Some other relevant links might be &lt;a href=&#34;https://wiki.ubuntuusers.de/Ekiga&#34;&gt;this&lt;/a&gt; and &lt;a href=&#34;http://wiki.ubuntuusers.de/fritzbox&#34;&gt;this&lt;/a&gt; you can learn there how to have a GUI for the FritzBox on Linux or add Thunderbird contacts into yourbox for example.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>tongue</title>
      <link>http://jubalh.github.io/blog/post/2015-05-29-tongue/</link>
      <pubDate>Wed, 29 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>http://jubalh.github.io/blog/post/2015-05-29-tongue/</guid>
      <description>

&lt;p&gt;I wanted to learn Go. But as everybody knows, I need do use something to learn how to use it.
After a while reading articles and watching talks about Go I started to think about what I could do, and what I did, was creating (a) tongue.&lt;/p&gt;

&lt;p&gt;I like learning languages, yeah, human languages that is. Unfortunately I am not able to speak any single one except my native language to a good level but I like it anyways. You can&amp;rsquo;t be good at everything you know?&lt;/p&gt;

&lt;p&gt;When creating tongue, I wanted it to be as simple as possible. It should be easy to use it with other programs. Meaning it should just store and retrieve my vocabulary, but I might use different things to display them. Maybe I would like to interact directly with tongue on the command line, but chances are good I will also want to use it to display my &amp;ldquo;vocabulary of the hour&amp;rdquo; via conky. Or use the notifcation-daemon to display a foreign word to me.&lt;/p&gt;

&lt;p&gt;Long story short, I tried to adhere to the UNIX philosophy, of doing just one task, and doing it well.&lt;/p&gt;

&lt;p&gt;Okay I am not so sure about the latter, but i will try my best.&lt;/p&gt;

&lt;h1 id=&#34;development:1de7bbffa5ebe2d1e9f74fd770263431&#34;&gt;Development&lt;/h1&gt;

&lt;p&gt;I love Go because it let&amp;rsquo;s me stay on the command line all day long. I used vim with the vim-go plugin to write my code. The experience was awesome.
Go is such a simple and clean language that vim is perfectly capable of handling it without any heavy customization. At work I am coding in PHP using the Symfony2 Framework, and at first I tried to do it with vim. But at some point a collegue made me try out PHPStrom, and I have to say it&amp;rsquo;s good. There is even a vim plugin which makes things much more comfortable. So it&amp;rsquo;s a good trade-off.&lt;/p&gt;

&lt;p&gt;The beauty about Go is, that you don&amp;rsquo;t need a heavy IDE. &lt;em&gt;Everything&lt;/em&gt; works great with vim.&lt;/p&gt;

&lt;p&gt;Usually I opened a terminal, started tmux, created two panels with vim on top and a shell below. I coded in vim, switched to the pane below and built and tested my program.&lt;/p&gt;

&lt;p&gt;Go and vim-go come with some nice tools that help you with your code, namely:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;go fmt&lt;/li&gt;
&lt;li&gt;go vet&lt;/li&gt;
&lt;li&gt;go imports&lt;/li&gt;
&lt;li&gt;go cover&lt;/li&gt;
&lt;li&gt;go lint&lt;/li&gt;
&lt;li&gt;go fix&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If I was unaware how a function from the standard libarary or from 3rd parties worked, I could just press &lt;em&gt;gd&lt;/em&gt; to jump to the definition.
Those tools and simple vim was all the IDE-like features I needed. It was all there. Great.&lt;/p&gt;

&lt;p&gt;release rest-reminder post first. and link to it for same possiblities with notifdy-send etc.&lt;/p&gt;

&lt;h1 id=&#34;usage:1de7bbffa5ebe2d1e9f74fd770263431&#34;&gt;Usage&lt;/h1&gt;

&lt;p&gt;My main reason for creating &lt;em&gt;tongue&lt;/em&gt; was to learn Go. But now I find myself using it &lt;strong&gt;a lot&lt;/strong&gt;.
Whenever I stumble upon a new word I go right into my Terminal and add it to my databse:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ tongue add Hallo Merhaba
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Because I am so proud of my ever growing list of words, I just type this from time to time to get excited:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ tongue --verbose l
You have 10 entries in your database:
1: Hallo - Merhaba
2: schön - güzel
3: Blume - çiçek
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;em&gt;&amp;ndash;verbose&lt;/em&gt; flag makes tongue output additional information like in this case &lt;em&gt;You have 10 entries in your database&lt;/em&gt;.
It should be used when you interact with it on the commandline directly. If you want to process the information with another program or script you shouldn&amp;rsquo;t use this flag. Your output will be easier to parse then.&lt;/p&gt;

&lt;p&gt;Sometimes I mistype so I have to delete a word again:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ tongue add Afe maymun

$ tongue delete Afe

$ tongue add Affe maymun

$ tongue list
1: Hallo - Merhaba
2: Affe - maymun
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When I am totally confused and don&amp;rsquo;t know how to use tongue anymore there is:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ tongue --help
tongue - a cli vocabulary manager

USAGE:
tongue [global options] command [command options] [arguments...]

VERSION:
0.0.1

AUTHOR(S):
Michael Vetter &amp;lt;g.bluehut@gmail.com&amp;gt;

COMMANDS:
add, a		add a new entry to the database. First argument is native, second is foreign word.
delete, d	delete entry from the database. Argument is the native word. Only the first occurance will be deleted.
list, l		list all entries
show, s		display an entry
help, h		Shows a list of commands or help for one command

GLOBAL OPTIONS:
--no-native					don&#39;t display native word
--no-foreign				don&#39;t display foreign word
--file &amp;quot;collection.json&amp;quot;	specify JSON file
--verbose, -m				display (more) additional messages
--help, -h					show help
--version, -v				print the version

$ tongue show --help
NAME:
show - display an entry

USAGE:
command show [command options] [arguments...]

OPTIONS:
--index, -i &amp;quot;0&amp;quot;	display entry with index &#39;index&#39;
--native, -n	display entry where native word is &#39;native&#39;
--foreign, -f	display entry where foreign word is &#39;foreign&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Another nice feature is that you can configure &lt;a href=&#34;http://conky.sourceforge.net/&#34;&gt;conky&lt;/a&gt; to display a new random word combination every X minutes, just by adding the following line to your &lt;em&gt;.conkyrc&lt;/em&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;${execi 5 tongue show}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It is probably a good idea to use the global &lt;em&gt;&amp;ndash;no-native&lt;/em&gt; flag to display the foreign word only in your conky. So you can think first, see if you can come up with the native word yourself and if not just run &lt;code&gt;tongue show --foreign Merhaba&lt;/code&gt; to see the word.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ tongue --no-native show
Merhaba

$ tongue show --foreign Merhaba
Hallo

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In similar ways you can use &lt;em&gt;notify-send&lt;/em&gt; to get a message on your desktop every X minutes containing your vocabulary. This time I tell tongue to use my spanish database instead of the standard one:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;watch -n 10 &amp;quot;notify-send &#39;$(tongue show --file ~/spanish.json)&#39;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You guessed right, tongue is available on &lt;a href=&#34;https://github.com/jubalh/tongue&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>LXQt development on Funtoo</title>
      <link>http://jubalh.github.io/blog/post/2014-12-13-devlxqttoo/</link>
      <pubDate>Sat, 13 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>http://jubalh.github.io/blog/post/2014-12-13-devlxqttoo/</guid>
      <description>

&lt;p&gt;This post is about making Funtoo/Gentoo ready for developing on LXQt or just have the latest version installed for testing.
Some people came with questions about this to the #lxde IRC channel, and since most of the LXQt developers run Arch Linux there is not always somebody online who can help with Gentoo questions.&lt;/p&gt;

&lt;p&gt;Note: I am doing this on Funtoo, but will use &amp;ldquo;Gentoo&amp;rdquo; from now on since it is the same procedure for both.&lt;/p&gt;

&lt;p&gt;The main point of confusion is that Gentoo has Qt5 still masked, but that is not problem at all.
In this post I will descript how to unmask Qt5 install, unmask the needed packages and install them. Then we will clone the LXQt git repository, build it and start it.&lt;/p&gt;

&lt;h1 id=&#34;unmasking:ca158e9143a61b4f7cb2040e761492c6&#34;&gt;Unmasking&lt;/h1&gt;

&lt;p&gt;&lt;br/&gt;
First let&amp;rsquo;s unmask Qt5.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$: vim /etc/portage/profile/use.mask
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And write &lt;strong&gt;-qt5&lt;/strong&gt; in there. Since Qt5 &lt;em&gt;is&lt;/em&gt; masked, we need to take it away(-).&lt;/p&gt;

&lt;p&gt;Now add the following lines to &lt;em&gt;/etc/portage/package.unmask&lt;/em&gt;:
&lt;br/&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;=kde-frameworks/kwindowsystem-5.4.0
&amp;gt;=dev-qt/qtwidgets-5.4.0
&amp;gt;=dev-qt/qtx11extras-5.4.0
&amp;gt;=dev-qt/qtgui-5.4.0
&amp;gt;=dev-qt/qtcore-5.4.0
&amp;gt;=dev-qt/qtxml-5.4.0
&amp;gt;=dev-qt/qtsvg-5.4.0
&amp;gt;=dev-qt/linguist-tools-5.4.0
&amp;gt;=dev-libs/libpcre-8.36
&amp;gt;=kde-frameworks/kguiaddons-5.4.0
&amp;gt;=dev-qt/qtdbus-5.4.0
&amp;gt;=dev-qt/qtconcurrent-5.4.0
&amp;gt;=dev-qt/qtsvg-5.4.0
&amp;gt;=dev-qt/qtscript-5.4.0
&amp;gt;=dev-qt/qtprintsupport-5.4.0
&amp;gt;=kde-frameworks/kguiaddons-5.4.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will unmask all the names packages with from version 5.4.0 and on. You could also just add &lt;em&gt;=kde-frameworks/kguiaddons-5.4.0&lt;/em&gt; without the &lt;em&gt;&amp;gt;&lt;/em&gt; to only unmask that one version.
Since you might read ths blog post later I added it to make sure it works on all later versions too. And besides I use it like that, too.&lt;/p&gt;

&lt;h1 id=&#34;use-flags:ca158e9143a61b4f7cb2040e761492c6&#34;&gt;USE flags&lt;/h1&gt;

&lt;p&gt;Fire up &lt;em&gt;vim&lt;/em&gt; and add the following packages with USE flags to your &lt;em&gt;/etc/portage/package.use&lt;/em&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dev-libs/libpcre-8.36 pcre16
sys-auth/polkit-qt qt5 -qt4
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;installation:ca158e9143a61b4f7cb2040e761492c6&#34;&gt;Installation&lt;/h1&gt;

&lt;h2 id=&#34;dependencies:ca158e9143a61b4f7cb2040e761492c6&#34;&gt;Dependencies&lt;/h2&gt;

&lt;p&gt;First let&amp;rsquo;s try if an example KF5 package can be installed.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$: emerge -a kwindowsystem

These are the packages that would be merged, in order:

Calculating dependencies... done!
[ebuild   R    ] dev-libs/libpcre-8.36  USE=&amp;quot;pcre16*&amp;quot; 
[ebuild  NS   #] dev-qt/qtcore-5.4.0 [4.8.6-r1] USE=&amp;quot;icu -debug -systemd {-test}&amp;quot; 
[ebuild  N    #] dev-qt/qtxml-5.4.0  USE=&amp;quot;-debug {-test}&amp;quot; 
[ebuild  N    #] dev-qt/linguist-tools-5.4.0  USE=&amp;quot;-debug -qml {-test}&amp;quot; 
[ebuild  N     ] dev-libs/extra-cmake-modules-1.4.0  USE=&amp;quot;-doc&amp;quot; 
[ebuild  NS   #] dev-qt/qtgui-5.4.0 [4.8.6-r1] USE=&amp;quot;gif harfbuzz jpeg opengl png udev xcb -accessibility -debug -egl -eglfs -evdev -gles2 -ibus -kms {-test}&amp;quot; 
[ebuild  N    #] dev-qt/qtwidgets-5.4.0  USE=&amp;quot;opengl png xcb -debug -gles2 {-test}&amp;quot; 
[ebuild  N     ] kde-frameworks/kf-env-3 
[ebuild  N    #] dev-qt/qtx11extras-5.4.0  USE=&amp;quot;-debug {-test}&amp;quot; 
[ebuild  N    #] kde-frameworks/kwindowsystem-5.4.0  USE=&amp;quot;X nls -debug -doc {-test}&amp;quot; 

Would you like to merge these packages? [Yes/No] Yes
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nice. So our changes were right.&lt;/p&gt;

&lt;p&gt;For LXQt we will need to install the following additional packages:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;kguiaddons&lt;/li&gt;
&lt;li&gt;liboobs&lt;/li&gt;
&lt;li&gt;polkit-qt&lt;/li&gt;
&lt;li&gt;qtsvg&lt;/li&gt;
&lt;li&gt;qtscript&lt;/li&gt;
&lt;li&gt;qtprintsupport&lt;/li&gt;
&lt;li&gt;libconfig&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And because LXQt uses openbox as it&amp;rsquo;s window manager you should also install the &lt;em&gt;openbox&lt;/em&gt; package.
Actually you can configure it to use another one, but the install script still checks for &lt;em&gt;obrender&lt;/em&gt; and another package by openbox.&lt;/p&gt;

&lt;h1 id=&#34;building:ca158e9143a61b4f7cb2040e761492c6&#34;&gt;Building&lt;/h1&gt;

&lt;p&gt;Okay, just go somewhere and clone the repo in there. I have the habit of putting all code in &lt;em&gt;~/src&lt;/em&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$: cd src
$: git clone https://github.com/lxde/lxqt
$: git submodule init
$: git submodule update --remote --rebase

$: LXQT_PREFIX=/usr USE_QT5=true ./build_all.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The project is splitted in different repositories. The first git command will clone the main repository, then we will get the others, which are added as git submodules.
Although there is also an CMake script in the repo, this doesn&amp;rsquo;t get much love from the devs, at least I have never found it to work properly. I guess eventually it will get removed and only the bas script will be there.
Qt5 is still not set as default in the build script, altough LXQt 0.8.0 is able to use Qt5, and from any version greater than the it is even mandatory. Qt4 support is totally dropped. Anyways, that&amp;rsquo;s the reason we need to tell the script in detail. Also I want to install all stuff in the &lt;em&gt;/usr&lt;/em&gt; directory, so I added the prefix.&lt;/p&gt;

&lt;p&gt;That&amp;rsquo;s it. We did it.&lt;/p&gt;

&lt;p&gt;Last step: add one of the following lines to your &lt;em&gt;.xinitrc&lt;/em&gt;, or in case you use a loging manager, configure it to start LXQt:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;exec ck-launch-session dbus-launch --sh-syntax --exit-with-session startlxqt
exec startlxqt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br/&gt;
&lt;a href=&#34;http://jubalh.github.io/blog/images/lxqt_screenshot_1920x1080.png&#34;&gt;
&lt;img src=&#34;http://jubalh.github.io/blog/images/lxqt_screenshot_1920x1080.png&#34; alt=&#34;LXQt screenshot&#34; style=&#34;width: 734px;&#34;/&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;other-options:ca158e9143a61b4f7cb2040e761492c6&#34;&gt;Other Options&lt;/h1&gt;

&lt;p&gt;Gentoo offers several ebuilds for LXQt, for example &lt;em&gt;lxqt-meta&lt;/em&gt; which will give you a working 0.7.0 version of the desktop environment. 0.8.0 is also available but masked, the packagers decided to only support the Qt5 version of 0.8.0 altough it&amp;rsquo;s not mandatory.
There is also an live ebuild, but since this post is centered around people who want to change the code and not just install the latest version available I described the way using git.&lt;/p&gt;

&lt;h1 id=&#34;references:ca158e9143a61b4f7cb2040e761492c6&#34;&gt;References&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://wiki.lxde.org/en/Build_LXDE-Qt_From_Source&#34;&gt;Build LXDE-Qt from source&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://wiki.gentoo.org/wiki/Qt/Qt5&#34;&gt;Qt5 on Gentoo Wiki&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://wiki.gentoo.org/wiki/KDE/Overlay/Frameworks_5&#34;&gt;Frameworks 5 on Gentoo Wiki&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Changing Flags</title>
      <link>http://jubalh.github.io/blog/post/2014-09-04-changingflag/</link>
      <pubDate>Thu, 04 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>http://jubalh.github.io/blog/post/2014-09-04-changingflag/</guid>
      <description>&lt;p&gt;Since March 2014 I am running &lt;a href=&#34;http://www.funtoo.org/Welcome&#34;&gt;Funtoo Linux&lt;/a&gt; on one of my main machines.
It&amp;rsquo;s a great distribution, I learn a lot while using it.&lt;/p&gt;

&lt;p&gt;Updating always went smoothly until yesterday, when I had troubles for the first time.&lt;/p&gt;

&lt;p&gt;I started my computer after the update and couldn&amp;rsquo;t connect through to my wifi anymore. I wondered what was the reason but didn&amp;rsquo;t find it fast enough, because I had to go to work. Taking the notebook with me I connect it to the  universities LAN and all goes well.&lt;/p&gt;

&lt;p&gt;At home again, I try to find the error. I use NetworkManager and nm-applet to configure my connections. nm-applet always gave me an &lt;em&gt;device not present&lt;/em&gt;
I tried to remember if any configuration files changed during updating. Usually I update like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $: emerge --sync
  $: emerge -aDNuv world
  $: emerge --depclean
  $: revdep-rebuild
  $: dispatch-conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I didn&amp;rsquo;t remember any network related changes during &lt;em&gt;dispatch-conf&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;When searching for wlan0 in dmesg the only thing I got was:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  IPv6: ADDRCONF(NETDEV_UP): wlan0: link is not ready
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I booted into my Debian which is installed alongside Funtoo, in case I break something but need a working environment for work. wifi worked here. Good. It was neither a hardware problem nor was the access point unavailable.&lt;/p&gt;

&lt;p&gt;Not wanting to reboot all the time to try things out (I was listening to an audiobook ;D), I chrooted into Funtoo:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $: cd /mnt/funtoo
  $: mount -t proc none proc
  $: mount --rbind /sys sys
  $: mount --rbind /dev dev &amp;amp;&amp;amp; cp /etc/resolv.conf etc/
  $: chroot /mnt/funtoo /bin/bash -i
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I tried an &lt;code&gt;iwlist scan&lt;/code&gt; which showed me my access point, seems like network and wifi was generally working, must be an issue of networkmanager or nm-applet.
On IRC I stumbled upon somebody who solved the same problem a day ago. And he advised me to look for changed use flags.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $: emerge -pv networkmanager

  These are the packages that would be merged, in order:

  Calculating dependencies -  ... done!
  [ebuild   R    ] net-misc/networkmanager-0.9.8.10-r1  USE=&amp;quot;consolekit dhcpcd introspection nss policykit resolvconf -avahi -bluetooth -connection-sharing -dhclient -gnutls -modemmanager -plugins_openconnect -plugins_openswan -plugins_openvpn -plugins_pptp -plugins_sstp -plugins_vpnc -ppp -systemd {-test} -upower -vala -wext -wifi&amp;quot; 0 k
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ohoh! What&amp;rsquo;s that &lt;strong&gt;-wifi&lt;/strong&gt;!&lt;/p&gt;

&lt;p&gt;Okay let&amp;rsquo;s see if this flag is useful in general:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $: eix -U wifi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Shows me a bunch of packages which contain this flag, for example &lt;em&gt;Thunderbird&lt;/em&gt;. Uh? What will this flag do in Thunderbird?
Okay, since I have no idea, I am going for the standard way and change the use flag on a per package basis.&lt;/p&gt;

&lt;p&gt;Adding &lt;code&gt;net-misc/networkmanager wifi&lt;/code&gt; to &lt;em&gt;/etc/portage/package.use&lt;/em&gt; and doing an &lt;code&gt;emerge -aDNuv networkmanager&lt;/code&gt; to rebuild the package I solved the problem.&lt;/p&gt;

&lt;p&gt;So because netoworkmanager got an additional flag to enable wifi management which was disabled by default my wifi didn&amp;rsquo;t work anymore. This was the first time I came across a problem like this and I wouldn&amp;rsquo;t have thought about this before. Let&amp;rsquo;s keep this in mind!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Participate in open source</title>
      <link>http://jubalh.github.io/blog/post/2014-08-15-opensource/</link>
      <pubDate>Fri, 15 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>http://jubalh.github.io/blog/post/2014-08-15-opensource/</guid>
      <description>

&lt;p&gt;On twitter and on some blogs there are quite some people describing themselves as &lt;em&gt;open source evangelists&lt;/em&gt; and stuff like that. Some of whom I know personally. And all they do is running around and talking about how great open source is. Mostly because, they don&amp;rsquo;t have to pay money for using software. Which undoubtedly is a valid reason, but not the only one. Anyway I would appreciate if they would go deeper into the subject and inform themselves about the philosophy behind Free Software, participate in open source either by writing code, creating artwork, translating or creating documentation instead of only spreading the word. Since, In my opinion, open source is already popular, and doesn&amp;rsquo;t need any more advertising but people who &lt;strong&gt;do&lt;/strong&gt; something.&lt;/p&gt;

&lt;p&gt;Which brings me to the point: Most people hype open source only because they don&amp;rsquo;t have to pay anything for using it. That&amp;rsquo;s what they mean by &lt;em&gt;open source evangelist&lt;/em&gt;. The second most frequent reason people claim they are &lt;em&gt;linux geeks&lt;/em&gt; is because its &lt;strong&gt;in&lt;/strong&gt;. At university I met (too) many people talking about Linux and claiming they know their shit but have no idea about anything.&lt;/p&gt;

&lt;p&gt;Just google your stuff, read a short overview and claim you know something. Real knowledge about a subject isn&amp;rsquo;t required only shallow understanding and reading the headings.&lt;/p&gt;

&lt;h1 id=&#34;stop-crying-man:130150900c6183f60d99464c51348c02&#34;&gt;Stop crying, man&lt;/h1&gt;

&lt;p&gt;Okay, I hear ya.
Now let&amp;rsquo;s get to the point :-)&lt;/p&gt;

&lt;p&gt;I am using GNU/Linux since 10 or 11 years and since a few months I wanted to participate, learn more and give back to the community.&lt;/p&gt;

&lt;p&gt;Sometimes it&amp;rsquo;s hard to find the right way to do something, this post is about ways to contribute and my first contributions.&lt;/p&gt;

&lt;h1 id=&#34;finding-a-project:130150900c6183f60d99464c51348c02&#34;&gt;Finding a project&lt;/h1&gt;

&lt;p&gt;For several weeks I was on and off looking at &lt;a href=&#34;http://openhatch.org/search/&#34;&gt;OpenHatch&lt;/a&gt; and scanning the abandoned projects at &lt;a href=&#34;http://sourceforge.net/&#34;&gt;SourceForge&lt;/a&gt; and the likes.&lt;/p&gt;

&lt;p&gt;Somehow I didn&amp;rsquo;t find the right fit.&lt;/p&gt;

&lt;p&gt;So after looking at several projects which didn&amp;rsquo;t match me, I let go of the idea, shortly after that, I found my first project.&lt;/p&gt;

&lt;h2 id=&#34;example-contributions:130150900c6183f60d99464c51348c02&#34;&gt;Example Contributions&lt;/h2&gt;

&lt;p&gt;I am only going to cover the ways in which I contributed to Open Source software, while mentioning an example.&lt;/p&gt;

&lt;h3 id=&#34;hashtwm:130150900c6183f60d99464c51348c02&#34;&gt;HashTWM&lt;/h3&gt;

&lt;p&gt;At my last employer we were running Windows. Because I was spoiled by using &lt;a href=&#34;http://i3wm.org/&#34;&gt;i3&lt;/a&gt; at home, which increased my speed and productivity, I wanted to be as fast navigating around in Windows.&lt;/p&gt;

&lt;p&gt;So it came, that I was looking for a tiling window manager for Windows.
At GitHub I found &lt;a href=&#34;https://github.com/ZaneA/HashTWM&#34;&gt;HashTWM&lt;/a&gt;, and I think this was the project I tried to contribute to.&lt;/p&gt;

&lt;p&gt;I remember being quite interested in understanding the code. My &lt;a href=&#34;https://github.com/ZaneA/HashTWM/commit/6f3af81cbe7964c4b01a3a8b6f059a5d3fdf294e&#34;&gt;first commit&lt;/a&gt; was to move the sourcecode to it&amp;rsquo;s own directory. And then created a VisualStudio project beside the existing Makefile. Both were received by the creator welcomly. Which encouraged me to look for more ways to help.&lt;/p&gt;

&lt;p&gt;I made the project ANSI C compatible and fixed some small error which occured on newer versions of Windows because of the duplicate function called &lt;em&gt;RegisterShellHookWindowProc&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Funny enough I didn&amp;rsquo;t use HashTWM long; only considering it led to my first open source contribution without really looking for it.&lt;/p&gt;

&lt;h3 id=&#34;diaspora-webclient:130150900c6183f60d99464c51348c02&#34;&gt;Diaspora Webclient&lt;/h3&gt;

&lt;p&gt;While checking out mobile applications for &lt;a href=&#34;https://diasporafoundation.org/&#34;&gt;Diaspora&lt;/a&gt; I came across &lt;a href=&#34;https://github.com/voidcode/Diaspora-Webclient&#34;&gt;Diaspora-Webclient&lt;/a&gt; on &lt;a href=&#34;https://f-droid.org/repository/browse/?fdid=com.voidcode.diasporawebclient&#34;&gt;F-Droid &lt;/a&gt;. Right after starting the app, there was welcome message displayed. And there was a typo in it. Of course Mr. Perfectionista couldn&amp;rsquo;t endure that. So I pulled the source, corrected the typo and &lt;a href=&#34;https://github.com/voidcode/Diaspora-Webclient/commit/1bd1175a9bfd6c0d8d63ed7960db92b5f9f3c984&#34;&gt;pushed my change&lt;/a&gt;. I know it&amp;rsquo;s nothing fancy, but still it&amp;rsquo;s increases the overall value of the product. At least I tend to think so..&lt;/p&gt;

&lt;h3 id=&#34;vimperator-colors:130150900c6183f60d99464c51348c02&#34;&gt;Vimperator Colors&lt;/h3&gt;

&lt;p&gt;Like a lot computer folks, I enjoy using &lt;strong&gt;vim&lt;/strong&gt;, and like the sometimes overly-enthusiastic person I am, I wanted to vimify &lt;strong&gt;everything&lt;/strong&gt;. To have Firefox understand the vi-keybindings I installed the &lt;a href=&#34;https://addons.mozilla.org/de/firefox/addon/vimperator/&#34;&gt;Vimperator plugin&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Browsing without taking my hands of the keyboard. I was really happy.&lt;/p&gt;

&lt;p&gt;The only thing, that managed to impair my joy was the not-so-pretty standard color theme. No problem, let&amp;rsquo;s find some on google!
Quite strange was, that the &lt;a href=&#34;https://github.com/vimpr/vimperator-colors&#34;&gt;main color theme repository&lt;/a&gt; contained merely &lt;em&gt;one&lt;/em&gt; theme! On google I found some more, some worked, some did not. So I made them work and put my fresh collection &lt;a href=&#34;https://github.com/jubalh/vimperator-colors&#34;&gt;repository&lt;/a&gt; on GitHub. It was a little better than having them scattered around the web, but for others to easily find them I made pull request to the main repository. I did wait for some time, because I was not sure if it really was the official repo, but the guys on IRC told me it was the right one.
Although it took &lt;em&gt;one year and a half&lt;/em&gt; until the owners &lt;a href=&#34;https://github.com/vimpr/vimperator-colors/pull/1&#34;&gt;saw my pull request&lt;/a&gt; and accepted it, I helped to expand the color theme collection from 1 to 13.&lt;/p&gt;

&lt;h3 id=&#34;vifm:130150900c6183f60d99464c51348c02&#34;&gt;Vifm&lt;/h3&gt;

&lt;p&gt;Still on the course to use my freshly learned vi-keybindings everywhere I came to use &lt;a href=&#34;http://vifm.info/&#34;&gt;vifm file explorer&lt;/a&gt;.
Regarding color themes, it was the same situation like with vimperator. So I created a &lt;a href=&#34;https://github.com/vifm/vifm-colors&#34;&gt;GitHub repo&lt;/a&gt; to share my collection of themes. I collected 7 stars and got 2 people to watch my repo, which was something new and exciting for me. After some time the &lt;a href=&#34;https://github.com/vifm&#34;&gt;vifm organisation&lt;/a&gt; was created, and the vifm source repository was moved from ksteen to the organisation. Due to the creation of the organisation I got an email from the maintainer and main developer of vifm, asking me whether I wanted to transfer my repo containing the collections to the vifm organisation. Of course I wanted to!&lt;/p&gt;

&lt;p&gt;While porting vim color themes to vifm, I realized that vifm only supports 8-Bit colors.
I emailed the author and when he politely replied that he will include more color support, I offered to do it myself, to get some experience. He agreed and encouraged me to do so. So it came &lt;a href=&#34;https://github.com/vifm/vifm/pull/43/commits&#34;&gt;I made vifm support 256 color names&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Later I made a minor contribution by &lt;a href=&#34;https://github.com/vifm/vifm/pull/46&#34;&gt;removing trailing whitespaces&lt;/a&gt;, which is a bad habit of mine. I just can&amp;rsquo;t stand them&amp;hellip; ;-)&lt;/p&gt;

&lt;h3 id=&#34;jessy:130150900c6183f60d99464c51348c02&#34;&gt;Jessy&lt;/h3&gt;

&lt;p&gt;At Uni we had to learn Java. However the exercises didn&amp;rsquo;t really catch my attention. So to understand all the concepts I thought about creating a &lt;a href=&#34;https://github.com/jubalh/jessy&#34;&gt;project of my own&lt;/a&gt;.
Because I was playing chess at this time, I wanted to create a little chess game. Actually just the representation of a board, containing figures. Nothing else. No move checking, no KI, man.. at first I didn&amp;rsquo;t plan to give the possibillity to move at all. Just a representation of the board.
I had so much fun with this project. Probably I will create a post of it&amp;rsquo;s own for it.&lt;/p&gt;

&lt;p&gt;Anyway, at some point I came to use a chess engine, called &lt;a href=&#34;http://fluxchess.com/&#34;&gt;Flux&lt;/a&gt;, through including it in my project I came to &lt;a href=&#34;https://github.com/fluxroot/flux/pull/79&#34;&gt;fix a small error&lt;/a&gt; in the project setup.&lt;/p&gt;

&lt;p&gt;Through Jessy I learned a lot, at some point two people joined the team and contributed to it. I learned how to manage and coordinate a project over the internet and to use GitHub properly. And I found a mentor who was an experienced Java developer who checked my code.&lt;/p&gt;

&lt;h3 id=&#34;homebrew:130150900c6183f60d99464c51348c02&#34;&gt;Homebrew&lt;/h3&gt;

&lt;p&gt;After Jessy, I wanted to learn more about Java, and because I was interested in web development for some time, I looked at different frameworks.&lt;/p&gt;

&lt;p&gt;I came across the &lt;a href=&#34;https://www.playframework.com/&#34;&gt;Play Framework&lt;/a&gt; and looking for a quick way to install it, &lt;code&gt;brew search&lt;/code&gt;ed it.
The Tutorial used version 2.3 of Play, which was newer than what Homebrew provided, so I intended to update the formula.&lt;/p&gt;

&lt;p&gt;Because Play switched to Typesafe-Activator it &lt;a href=&#34;https://github.com/Homebrew/homebrew/pull/30262&#34;&gt;turned out&lt;/a&gt; that there was a formula containing Activator and thus Play.
Someone pointed out that version 2.2 of Play was still in heavy used and so it came, I &lt;a href=&#34;https://github.com/jubalh/homebrew/commit/67f8919f11b0e7ca5b8987876aa750ceabdf2d4f&#34;&gt;added an caveat&lt;/a&gt; but then &lt;a href=&#34;https://github.com/jubalh/homebrew/commit/19413541411e58759faadde24138c789d80ee944&#34;&gt;removed Play altogether&lt;/a&gt; and &lt;a href=&#34;https://github.com/Homebrew/homebrew-versions/pull/462&#34;&gt;added it to homebrew-versions&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;reading-code:130150900c6183f60d99464c51348c02&#34;&gt;Reading code&lt;/h2&gt;

&lt;p&gt;Generally I think reading code of others is a good thing to do. Sometimes you can learn a lot from it, and it trains you to understand different styles and easily comprehend what&amp;rsquo;s going on. Though I have to say, most of the time it&amp;rsquo;s hard for me ;-) Understanding comes slowly, but that is okay for now.&lt;/p&gt;

&lt;p&gt;So whenever I came across something interesting, or read about new open source software on &lt;a href=&#34;https://news.ycombinator.com/&#34;&gt;Hacker News&lt;/a&gt; and had some free time (or not) I checked out the code and sometimes I was able to make some minor improvements. Mostly making the coding style consistent or hunting whitespaces while reading the code.&lt;/p&gt;

&lt;p&gt;In such ways I contributed to &lt;a href=&#34;https://github.com/shaih/HElib&#34;&gt;HElib&lt;/a&gt;, a library that implements homomorphic encryption, the Telegram &lt;a href=&#34;https://github.com/telegramdesktop/tdesktop&#34;&gt;desktop&lt;/a&gt; and &lt;a href=&#34;https://github.com/vysheng/tg&#34;&gt;console&lt;/a&gt; clients, and the &lt;a href=&#34;https://code.launchpad.net/~ubuntu-terminal-dev/ubuntu-terminal-app/plugin&#34;&gt;ubuntu-terminal-app-plugin&lt;/a&gt; used by &lt;a href=&#34;https://github.com/Swordifish90/cool-old-term&#34;&gt;cool-old-term&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;When I came across cool-old-term I wrote a post entitled &lt;a href=&#34;{% post_url 2014-07-30-launchpad %}&#34;&gt;Canonical Launchpad&lt;/a&gt;. Check it out to read more about my contribution.&lt;/p&gt;

&lt;h1 id=&#34;ways-to-contribute:130150900c6183f60d99464c51348c02&#34;&gt;Ways to contribute&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;I used something and came across an error/something unclear as a user: &lt;em&gt;Diaspora-Webclient, Homebrew&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;I used something and wanted to improve it: &lt;em&gt;vifm&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;I created something: &lt;em&gt;Jessy&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;I read code and found a mistake/inconsistent style: &lt;em&gt;HELib, cool-old-term, telegram console, telegram desktop, vifm&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;I wrote software and use third party libraries, but came across an error: &lt;em&gt;Flux&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Creating color themes/artwork: &lt;em&gt;vifm, Vimperator&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;fazit:130150900c6183f60d99464c51348c02&#34;&gt;Fazit&lt;/h1&gt;

&lt;p&gt;I am aware that most of my contributions were only of a minor nature. Anyway I learned something from every single one of them. And in my eyes every little improvement is an improvement still.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Canonical Launchpad</title>
      <link>http://jubalh.github.io/blog/post/2014-07-30-launchpad/</link>
      <pubDate>Wed, 30 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>http://jubalh.github.io/blog/post/2014-07-30-launchpad/</guid>
      <description>

&lt;p&gt;Through a &lt;a href=&#34;https://twitter.com/nixcraft/statuses/494081428661870593&#34;&gt;tweet&lt;/a&gt;, I stumbled upon &lt;a href=&#34;https://github.com/Swordifish90/cool-old-term&#34;&gt;cool-old-term&lt;/a&gt;, a terminal emulator with the looks of an old cathode tube screen realized with QML.
It was a funny idea and because I wrote a small QML Hello World example once, but didn&amp;rsquo;t dig deeper into QML,I decided to check out the sourcecode and give it a look.&lt;/p&gt;

&lt;p&gt;But again, I didnt&amp;rsquo;t spent much time reading the QML but rather looked at the C++ terminal plugin behind cool-old-term.&lt;/p&gt;

&lt;p&gt;My vim is configured to display spaces and tabs, and because of this I found some of them at unnecessary places. I fixed them out of perfectionism (yeah I know, I am a great guy), and went on to submit my changes.&lt;/p&gt;

&lt;p&gt;So it came, that I used &lt;a href=&#34;http://bazaar.canonical.com/en/&#34;&gt;Bazaar&lt;/a&gt; for the first time, registered at &lt;a href=&#34;https://launchpad.net/&#34;&gt;Launchpad&lt;/a&gt; and made my first contribution on that platform.&lt;/p&gt;

&lt;h1 id=&#34;terminology:e4b86f8f071132acd15659476e92ecef&#34;&gt;Terminology&lt;/h1&gt;

&lt;p&gt;Bazaar is a version control system which is sponsored by Canonical. It&amp;rsquo;s similiar to git in the way that it&amp;rsquo;s also distributed and doesn&amp;rsquo;t use a central server like for example SVN.&lt;/p&gt;

&lt;p&gt;Launchpad is a platform to host sourcecode, report bugs and generally administer open source projects, similar to GitHub or Sourceforge. Like Bazaar it&amp;rsquo;s maintained by Canonical and thus heavily used in the development of Ubuntu Linux related software.&lt;/p&gt;

&lt;h1 id=&#34;making-the-change:e4b86f8f071132acd15659476e92ecef&#34;&gt;Making the change&lt;/h1&gt;

&lt;p&gt;I just intend to read the code not compile it, so I stay on OSX and install Bazaar via Homebrew.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  brew install bzr
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Since I know nothing more about Bazaar other than what it is and some of it&amp;rsquo;s differences and similarities related to git. I read a the basic introduction &lt;a href=&#34;http://doc.bazaar.canonical.com/latest/en/mini-tutorial/&#34;&gt;Bazaar in five minutes&lt;/a&gt; to learn the most basic commands.&lt;/p&gt;

&lt;p&gt;This was already enough to get me started, so I set my username and checked out the ubuntu-terminal-app.
Like on GitHub you need to register an ssh key on Launchpad, which I copy using the last of the following lines.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd ~/src/ubuntu-terminal-app
$ bzr branch https://launchpad.net/ubuntu-terminal-app
Not checking SSL certificate for launchpad.net.
Branched 101 revisions.

$ bzr whoami &amp;quot;Michael Vetter &amp;lt;g.bluehut@gmail.com&amp;gt;&amp;quot;
$ bzr launchpad-login g-bluehut
$ cat ~/.ssh/id_rsa.pub | pbcopy
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now I &lt;a href=&#34;https://launchpad.net/people/+me/+editsshkeys&#34;&gt;paste them to my profile&lt;/a&gt; and am ready to make my changes.
Adding and commiting files is similar like with git:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ bzr add

$ bzr commit
Committing to: /Users/michael/src/bzr2/ub-kn/bluehut/
modified src/plugin/konsole/Character.h
modified src/plugin/konsole/ColorScheme.cpp
modified src/plugin/konsole/Vt102Emulation.cpp
...
modified src/plugin/konsole/ksession.h
Committed revision 102.

$ bzr push lp:~/g-bluehut/ubuntu-terminal-app/whitespacefix/
bzr: ERROR: Permission denied: &amp;quot;~g-bluehut/g-bluehut/ubuntu-terminal-app/whitespacefix/&amp;quot;:
: Cannot create branch at &#39;/~g-bluehut/g-bluehut/ubuntu-terminal-app/whitespacefix&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;At first I got confused why I didn&amp;rsquo;t have permission to push to my repo and looked for different causes, reading the line again I saw that I wasted the time because of an typo&amp;hellip;
The first slash on the line was evildoer. The good thing was, while looking for my mistake I learned that I can abbreviate my last command to &lt;code&gt;$ bzr push:~/ubuntu-terminal-app/whitespacefix&lt;/code&gt; because Bazaar knows my username already.&lt;/p&gt;

&lt;p&gt;My branch is now publicly available on Launchpad, so I &lt;a href=&#34;https://code.launchpad.net/~g-bluehut/ubuntu-terminal-app/whitespacefix&#34;&gt;navigate to it&lt;/a&gt; and click on &lt;em&gt;Propose for merging&lt;/em&gt; choose the branch to merge into, which in my case is &lt;em&gt;lp:ubuntu-terminal-app&lt;/em&gt;, I don&amp;rsquo;t provide a description because I assume the commit message is meaningful enough for this small change and click on &lt;em&gt;propose merge&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The change is now &lt;a href=&#34;https://code.launchpad.net/~g-bluehut/ubuntu-terminal-app/whitespacefix/+merge/228807&#34;&gt;pending for review&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://jubalh.github.io/blog/images/ubuntu-terminal-app-review-large.png&#34;&gt;
&lt;img src=&#34;http://jubalh.github.io/blog/images/ubuntu-terminal-app-review-large.png&#34; alt=&#34;Pending for review&#34; style=&#34;width: 734px;&#34;/&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;the-end:e4b86f8f071132acd15659476e92ecef&#34;&gt;The end&lt;/h1&gt;

&lt;p&gt;At first Launchpad seemed quite confusing to me, and even though it got better after some time of using it I still think GitHub is much more clear and easier to use.&lt;/p&gt;

&lt;p&gt;After committing my change I read some pages which I found during my journey. Thanks again slash-typo!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://packaging.ubuntu.com/html/patches-to-packages.html&#34;&gt;Patches to Packages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://packaging.ubuntu.com/html/fixing-a-bug.html&#34;&gt;Fixing a bug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://doc.bazaar.canonical.com/migration/en/survival/bzr-for-git-users.html&#34;&gt;Bazaar for git users&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Hear the symfony</title>
      <link>http://jubalh.github.io/blog/post/2014-07-16-symfony/</link>
      <pubDate>Wed, 16 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>http://jubalh.github.io/blog/post/2014-07-16-symfony/</guid>
      <description>&lt;p&gt;When I moved here to start going to university, I searched for interesting companies to work for. One of them stated on their website that they use the &lt;a href=&#34;http://symfony.com/&#34;&gt;symfony2&lt;/a&gt; PHP framework.&amp;rdquo;
I have never done much in the web area, but have always been interested in getting started. Because I was totally in exam period I rather should have studied, but decided to give symfony a quick look.&lt;/p&gt;

&lt;p&gt;Somfonys website is excellent. A lot of information, and very clearly presented.
Nevertheless it took my some time to set it up, mainly because I never did it before nor played with PHP.&lt;/p&gt;

&lt;p&gt;To get an overview I followed their guide &lt;a href=&#34;http://symfony.com/doc/current/quick_tour/the_big_picture.html&#34;&gt;The Big picture&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You should also now that I did all this on OSX.&lt;/p&gt;

&lt;p&gt;First thing is to install symphony via &lt;a href=&#34;https://getcomposer.org/&#34;&gt;composer&lt;/a&gt;, a PHP dependency management tool. For some reason it was already installed on my computer, but I don&amp;rsquo;t know if I played with PHP before and installed computer on the way or if it ships with OSX be default. I assume that I installed it myself and forgot about it though.&lt;/p&gt;

&lt;p&gt;Installing composor isn&amp;rsquo;t difficult at all on OSX you can do it via homebrew:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  brew update     
  brew tap homebrew/homebrew-php     
  brew tap homebrew/dupes     
  brew tap homebrew/versions
  brew install php55-intl
  brew install homebrew/php/composer
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And for other operating systems you can just follow their &lt;a href=&#34;https://getcomposer.org/doc/00-intro.md#installation-nix&#34;&gt;installation instructions&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Unfortunately installing symfony itself, was the first thing that didn&amp;rsquo;t work.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $: composer create-project symfony/framework-standard-edition myproject/ 2.5`
  
  Installing symfony/framework-standard-edition (v2.5.0)
    - Installing symfony/framework-standard-edition (v2.5.0)
        Loading from cache

        Created project in myproject/
        Loading composer repositories with package information
        Installing dependencies (including require-dev)
  
  Fatal error: Allowed memory size of 536870912 bytes exhausted (tried to allocate 32 bytes)
  in phar:///usr/local/Cellar/composer/1.0.0-alpha8/libexec/composer.phar/src/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Seems like something is running out of memory, but why? It isn&amp;rsquo;t that much after all.
After some investigating it seemed like Composer was running out of memory when trying to build the dependency tree. And that I can configure how much memory it has at it&amp;rsquo;s disposal in the PHP config.&lt;/p&gt;

&lt;p&gt;In /usr/local/etc/php/5.5/php.ini I looked for &lt;em&gt;memory_limit&lt;/em&gt; and changed it&amp;rsquo;s value to &lt;em&gt;-1&lt;/em&gt; for unlimited. Since this is my private machine used for development this should be okay.&lt;/p&gt;

&lt;p&gt;No luck.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ php -i | grep ini
Configuration File (php.ini) Path =&amp;gt; /etc

$ php -i | grep Loaded Configuration
Loaded Configuration File = (none)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Aha! PHP thought my ini is in &lt;code&gt;/etc/&lt;/code&gt; when I really edited the one in &lt;code&gt;/usr/local/etc/php/5.5/php.ini&lt;/code&gt;. However when looking into the directory I saw that there was a template file, which I decided to edit instead.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cp /etc/php.ini.default /etc/php.ini
$ su vim /etc/php.ini
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Making the same change in this file and saving it I eliminated the error, but got a new one in return.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ composer create-project symfony/framework-standard-edition myproject/ ~2.5

[Symfony\Component\Debug\Exception\ContextErrorException]
 Warning: date_default_timezone_get(): It is not safe to rely on the system&#39;s timezone settings.
 You are *required* to use the date.timezone setting or the date_default_timezone_set() function.
 In case you used any of those methods and you are still getting this warning, you most likely
 misspelled the timezone identifier. We selected the timezone &#39;UTC&#39; for now, 
 but please set date.timezone to select your timezone. in 
 /Users/alguen/src/symfonytest/myproject/vendor/monolog/monolog/src/Monolog/Logger.php line 233
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The message continued with several other errors, but one step at a time, right?
When looking for &lt;em&gt;timezone&lt;/em&gt; in my PHP.ini I found&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[Date]
; Defines the default timezone used by the date functions
; http://php.net/date.timezone
;date.timezone =
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So there was one more mistake to fix, the line was commented out.
Checking &lt;a href=&#34;http://php.net/date.timezone&#34;&gt;http://php.net/date.timezone&lt;/a&gt; for the correct syntax, I used: &lt;code&gt;date.timezone = &amp;quot;Europe/Berlin&amp;quot;&lt;/code&gt; ran the installation command again and: it worked!&lt;/p&gt;

&lt;p&gt;After this the tutorial was a breeze, and gave me a nice overview of symfony.
Being my first time engaging in web development stuff, I also enjoyed the chapter &lt;a href=&#34;http://symfony.com/doc/current/book/http_fundamentals.html&#34;&gt;HTTP Fundamentals&lt;/a&gt; in their online &lt;a href=&#34;http://symfony.com/doc/current/book/index.html&#34;&gt;symfony book&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Actually, let&amp;rsquo;s just work through that now too.
What? Exams in two days? Oh well&amp;hellip;&lt;/p&gt;

&lt;p&gt;I know my priorities.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>In A Galaxy Far, Far Away</title>
      <link>http://jubalh.github.io/blog/post/2014-05-03-intro/</link>
      <pubDate>Sat, 03 May 2014 00:00:00 +0000</pubDate>
      
      <guid>http://jubalh.github.io/blog/post/2014-05-03-intro/</guid>
      <description>

&lt;h2 id=&#34;in-a-galaxy-far-far-away:87f03697e63db30265d009426bc0037e&#34;&gt;In A Galaxy Far, Far Away&lt;/h2&gt;

&lt;p&gt;or, how everything started&lt;/p&gt;

&lt;p&gt;In this first Post I would like to tell you how my journey into the world of computers began.&lt;/p&gt;

&lt;p&gt;I think I was something between 10 to 12 years old when I watched the older brother of a friend playing a text based computer game in fullscreen console on Windows 95.&lt;/p&gt;

&lt;p&gt;&amp;ldquo;Why do you play a game like that? Why not play one which has graphics?&amp;rdquo; - &amp;ldquo;Because we wrote this game ourselves&amp;rdquo;&lt;/p&gt;

&lt;p&gt;&amp;ldquo;Wrote?&amp;rdquo;&lt;/p&gt;

&lt;p&gt;So it came that one week later my friend brought a floppy to class with the words: &amp;ldquo;Here you have it. The game my bro wrote with his friends&amp;rdquo;.
I couldn&amp;rsquo;t await it even more than usual to get home.&lt;/p&gt;

&lt;p&gt;&amp;ldquo;Well, this looks kind of different than it looked at his computer. Maybe he got me the wrong file?&amp;rdquo; These were the first thoughts that came to me when opening &lt;em&gt;schulsim.bas&lt;/em&gt;.
But at the same time the text was strangely familiar, just those additional strange english words (I&amp;rsquo;m a native German) surprised and confused me.&lt;/p&gt;

&lt;p&gt;Whatever. Let&amp;rsquo;s play! So I started playing the game, read: typed &lt;em&gt;a&lt;/em&gt;, &lt;em&gt;b&lt;/em&gt;, or &lt;em&gt;c&lt;/em&gt; depending if I wanted to go into the classroom, the hallway or the principals office. Of course I chose option &lt;em&gt;b&lt;/em&gt;, the hallway.
Strange. Nothing happened. But I could read the next scenario anyways, so I just scrolled down and decided to try to pick a locker. Unfortunately I had no luck, and why is this game so different than what I saw last week? I have to scroll down myself, the text looks grey on blue instead of just white on black, there is no interaction, and all those weird english words everywhere.&lt;/p&gt;

&lt;p&gt;After playing a while like this (I surely enjoyed myself, but enough is enough), I decided that eating is much better than playing. So when I wanted to close the program I realized the menu bar at the top, especially one item: &lt;em&gt;execute&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;I clicked on it, and a little window with weird messages pops up. I realized it were errors and they pointed at the lines I edited. All my yesses and noes, my a, b, c and d&amp;rsquo;s.
What was his problem with those? He didn&amp;rsquo;t do anything anyway, so why complain now?&lt;/p&gt;

&lt;p&gt;I removed all of them and clicked again on &lt;em&gt;execute&lt;/em&gt;, suddenly the screen turned to white color on black background.&lt;/p&gt;

&lt;p&gt;Now, before you think I must have been a total retard keep in mind that there was no Internet at that time (not for me), nobody in my family used a computer, and thus nobody ever told me how computer programs worked, I had no concept of compilers nor interpreters nor anything. I was just a kid discovering how to program all by itself. I continued to alter the code and hit execute and slowly learned what &lt;em&gt;if&lt;/em&gt;, &lt;em&gt;goto&lt;/em&gt;, and &lt;em&gt;$NAME&lt;/em&gt; did and were, by try and error, by comparing my change to the change of program behaviour. The help menu of QBasic was not of much use to me since it was in english, and my english skills were limited to &lt;em&gt;apple&lt;/em&gt; and &lt;em&gt;ruler&lt;/em&gt; at that time.&lt;/p&gt;

&lt;p&gt;This is how I started my journey into the world of programming. I had a lot of fun, and felt like discovering a whole new world, of which noone ever told me before.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>